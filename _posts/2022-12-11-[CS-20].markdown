---
layout: post
title: "[CS지식] 스크립트 언어와 컴파일 언어 "
date: 2022-12-11 19:43 +09:00
excerpt: "스크립트 언어와 컴파일 언어가 어떻게 다를까요? <br>2022-12-11"
cs: true
categories: cs
comments: true
---

# 📌 스크립트 언어와 컴파일 언어

---

<!-- <figure>
    <a href="/assets/img/cs/2022-08-07/server.png"><img src="/assets/img/cs/2022-08-08/server.png"></a>
    <figcaption style="text-align:center"></figcaption>
</figure> -->

<br>
<br>

# 주제: 스크립트 언어와 컴파일 언어
스크립트 언어와 컴파일 언어는 어떤 차이가 있을까?  
먼저, 우리가 아는 대부분의 프로그래밍 언어 자체로는 컴퓨터가 이해할 수 없다.  
컴퓨터는 오직 기계어만 이해할 수 있다. 비유하자면 0, 1만 이해할 수 있다.  


<br>

## 컴파일 언어
컴파일 언어: 소스코드를 컴파일러를 통해 기계어로 변환하는 과정을 거치는 프로그래밍 언어.  

**특징**  
- 소스코드를 컴파일하는 과정을 통해 기계어로 번역한다.
- 실행 파일이 만들어지고 그 파일을 실행한다.
- 실행 속도가 빠르다
- 컴파일 과정에서 오류가 발생하면 실행되지 않는다.

**예시**  
- 코볼
- C
- Go
- Rust
- Java, C#

**※ 빌드랑 컴파일의 차이점은?**  
빌드는 소스코드 파일을 실행가능한 독립적인 소프트웨어로 변환하는 과정이다.  
빌드 과정에 컴파일이 포함되어 있다.  
즉, 컴파일된 코드를 실제 실행할 수 있는 독립된 상태로 만드는 것이 빌드. 


<br>
<br>

## 인터프리터 언어
인터프리터 언어: 프로그래밍 언어의 소스 코드를 바로 실행 가능한 컴퓨터 프로그램 환경에서 실행되는 언어

**특징**
- 소스코드를 컴파일 과정없이 바로 직접 실행한다.
- 한 줄 단위로 읽어들여서 번역, 실행된다.
- 속도가 컴파일에 비해 느리다.



<br>
<br>


<br>
<br>
<br>
<br>

### 출처
https://velog.io/@jkijki12/%EC%BB%B4%ED%8C%8C%EC%9D%BC-%EC%9D%B8%ED%84%B0%ED%94%84%EB%A6%AC%ED%84%B0-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8  

https://choseongho93.tistory.com/296  



[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]: https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
